{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\digerpcden\\\\digerpcdenYagmurErdem\\\\Benim\\\\questapp\\\\questappreact\\\\quest-app-react-app\\\\src\\\\components\\\\Home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Post from '../Post/Post';\nimport { useState, useEffect } from \"react\";\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport PostForm from '../Post/PostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false); //data geldi gelmedi mi\n\n  const [postList, setPostList] = useState([]); //data bunun içine dolacak\n\n  const refreshPosts = () => {\n    fetch(\"/posts\").then(res => res.json()).then(result => {\n      setIsLoaded(true); //data geldi\n\n      setPostList(result); //data\n    }, error => {\n      console.log(error);\n      setIsLoaded(true);\n      setError(error);\n    });\n  };\n\n  useEffect(() => {\n    refreshPosts();\n  }, [postList]); //herhangi bir değişiklik olduğunda algıla ve refresle //yani birşey kaydettiğimde ekrana kaydettiğimi getirir\n\n  if (error) //en başta null olarak gönderildiği için buraya girmez parametre error olduğunda girer\n    {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"  Error !!! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) //data henüz gelemdiyse\n    {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this);\n    } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fixed: true,\n      sx: {\n        rowLength: 100,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: '#f0f5ff',\n        height: '100vh'\n      },\n      children: postList.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        id: post.id,\n        kisiId: post.kisiId,\n        kisiName: post.kisiName,\n        title: post.title,\n        text: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this) //gelen her bir datayı post componenti olarak renderlar\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Home, \"H4YLgqKE4ziVJ/DiQo+X9quRNzE=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/digerpcden/digerpcdenYagmurErdem/Benim/questapp/questappreact/quest-app-react-app/src/components/Home/Home.js"],"names":["React","Post","useState","useEffect","Box","Container","PostForm","Home","error","setError","isLoaded","setIsLoaded","postList","setPostList","refreshPosts","fetch","then","res","json","result","console","log","rowLength","display","flexWrap","justifyContent","alignItems","backgroundColor","height","map","post","id","kisiId","kisiName","title","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC,CAH2B,CAGsB;;AACjD,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC,CAJ2B,CAImB;;AAE9C,QAAMY,YAAY,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAAC,QAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRR,MAAAA,WAAW,CAAC,IAAD,CAAX,CADQ,CACW;;AACnBE,MAAAA,WAAW,CAACM,MAAD,CAAX,CAFQ,CAEY;AACvB,KANT,EAQSX,KAAD,IAAW;AACPY,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAZT;AAcH,GAfD;;AAiBAL,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY;AACf,GAFQ,EAEN,CAACF,QAAD,CAFM,CAAT,CAvB2B,CAyBb;;AAGd,MAAIJ,KAAJ,EAAW;AACX;AACI,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHD,MAGO,IAAI,CAACE,QAAL,EAAe;AACtB;AACI,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH,KAJM,MAKF;AACD,wBAII,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAkB,MAAA,EAAE,EAAE;AAAEY,QAAAA,SAAS,EAAE,GAAb;AAAkBC,QAAAA,OAAO,EAAE,MAA3B;AAAmCC,QAAAA,QAAQ,EAAE,MAA7C;AAAqDC,QAAAA,cAAc,EAAE,QAArE;AAA+EC,QAAAA,UAAU,EAAE,QAA3F;AAAqGC,QAAAA,eAAe,EAAE,SAAtH;AAAiIC,QAAAA,MAAM,EAAE;AAAzI,OAAtB;AAAA,gBAEKhB,QAAQ,CAACiB,GAAT,CAAaC,IAAI,iBACd,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEA,IAAI,CAACC,EAAf;AAAmB,QAAA,MAAM,EAAED,IAAI,CAACE,MAAhC;AAAwC,QAAA,QAAQ,EAAEF,IAAI,CAACG,QAAvD;AAAiE,QAAA,KAAK,EAAEH,IAAI,CAACI,KAA7E;AAAoF,QAAA,IAAI,EAAEJ,IAAI,CAACK;AAA/F;AAAA;AAAA;AAAA;AAAA,cADc,CACgG;AADjH;AAFL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAoBH;AACJ;;GA1DuB5B,I;;KAAAA,I","sourcesContent":["import React from 'react';\r\nimport Post from '../Post/Post';\r\nimport { useState, useEffect } from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport PostForm from '../Post/PostForm';\r\n\r\nexport default function Home() {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false) ;//data geldi gelmedi mi\r\n    const [postList, setPostList] = useState([]); //data bunun içine dolacak\r\n\r\n    const refreshPosts = () => {\r\n        fetch(\"/posts\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true); //data geldi\r\n                    setPostList(result) //data\r\n                },\r\n\r\n                (error) => {\r\n                    console.log(error)\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshPosts()\r\n    }, [postList])//herhangi bir değişiklik olduğunda algıla ve refresle //yani birşey kaydettiğimde ekrana kaydettiğimi getirir\r\n\r\n\r\n    if (error) //en başta null olarak gönderildiği için buraya girmez parametre error olduğunda girer\r\n    {\r\n        return <div>  Error !!! </div>;\r\n    } else if (!isLoaded) //data henüz gelemdiyse\r\n    {\r\n        return <div>Loading... </div>;\r\n\r\n    }\r\n    else {\r\n        return (\r\n\r\n\r\n            \r\n            <Container fixed  sx={{ rowLength: 100, display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\", alignItems: \"center\", backgroundColor: '#f0f5ff', height: '100vh' }}>\r\n                {/* <PostForm kisiId={1} kisiName={\"ddd\"} refreshPosts={refreshPosts} /> */}\r\n                {postList.map(post => (\r\n                    <Post id={post.id} kisiId={post.kisiId} kisiName={post.kisiName} title={post.title} text={post.text} ></Post> //gelen her bir datayı post componenti olarak renderlar\r\n\r\n                ))}\r\n                {/* <Box sx={{ display:\"flex\",flexWrap:\"wrap\",justifyContent:\"center\",alignItems:\"center\",backgroundColor:'#cfe8fc', height:'100vh'}} /> */}\r\n                {/* {postList.map(post => (\r\n                    <Post title= {post.title}  text={post.text}></Post> //gelen her bir datayı post componenti olarak renderlar\r\n                    \r\n                ))} */}\r\n            </Container>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}