{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\digerpcden\\\\digerpcdenYagmurErdem\\\\Benim\\\\questapp\\\\questappreact\\\\quest-app-react-app\\\\src\\\\components\\\\Home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Post from '../Post/Post';\nimport { useState, useEffect } from \"react\";\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport PostForm from '../Post/PostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false); //data geldi gelmedi mi\n\n  const [postList, setPostList] = useState([]); //data bunun içine dolacak\n\n  const refreshPosts = () => {\n    fetch(\"/posts\").then(res => res.json()).then(result => {\n      setIsLoaded(true); //data geldi\n\n      setPostList(result); //data\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  };\n\n  useEffect(() => {\n    refreshPosts();\n  }, [postList]); //herhangi bir değişiklik olduğunda algıla ve refresle //yani birşey kaydettiğimde ekrana kaydettiğimi getir\n\n  if (error) //en başta null olarak gönderildiği için buraya girmez parametre error olduğunda girer\n    {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"  Error !!! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) //data henüz gelemdiyse\n    {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this);\n    } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fixed: true,\n      Box: true,\n      sx: {\n        rowLength: 100,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: '#f0f5ff',\n        height: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(PostForm, {\n        kisiId: 1,\n        kisiName: \"ddd\",\n        refreshPosts: refreshPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), postList.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        kisiId: post.kisiId,\n        kisiName: post.kisiName,\n        title: post.title,\n        text: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this) //gelen her bir datayı post componenti olarak renderlar\n      )]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Home, \"H4YLgqKE4ziVJ/DiQo+X9quRNzE=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/digerpcden/digerpcdenYagmurErdem/Benim/questapp/questappreact/quest-app-react-app/src/components/Home/Home.js"],"names":["React","Post","useState","useEffect","Box","Container","PostForm","Home","error","setError","isLoaded","setIsLoaded","postList","setPostList","refreshPosts","fetch","then","res","json","result","rowLength","display","flexWrap","justifyContent","alignItems","backgroundColor","height","map","post","kisiId","kisiName","title","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAAUC,QAAV,EAAoBC,SAApB,QAAqC,OAArC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC,CAFY,CAEoC;;AAChD,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC,CAHY,CAGiC;;AAE7C,QAAMY,YAAY,GAAC,MAAK;AACpBC,IAAAA,KAAK,CAAC,QAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGKG,MAAD,IAAY;AACRR,MAAAA,WAAW,CAAC,IAAD,CAAX,CADQ,CACW;;AACnBE,MAAAA,WAAW,CAACM,MAAD,CAAX,CAFQ,CAEY;AACvB,KANL,EAOKX,KAAD,IAAW;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAVL;AAYH,GAbD;;AAeAL,EAAAA,SAAS,CAAC,MAAM;AACbW,IAAAA,YAAY;AACd,GAFQ,EAEP,CAACF,QAAD,CAFO,CAAT,CApBY,CAsBC;;AAGb,MAAIJ,KAAJ,EAAW;AACX;AACI,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHD,MAGO,IAAI,CAACE,QAAL,EAAe;AACtB;AACI,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH,KAJM,MAKF;AACD,wBAII,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,GAAG,MAApB;AAAqB,MAAA,EAAE,EAAE;AAAIU,QAAAA,SAAS,EAAE,GAAf;AAAqBC,QAAAA,OAAO,EAAC,MAA7B;AAAqCC,QAAAA,QAAQ,EAAC,MAA9C;AAAsDC,QAAAA,cAAc,EAAC,QAArE;AAA+EC,QAAAA,UAAU,EAAC,QAA1F;AAAoGC,QAAAA,eAAe,EAAC,SAApH;AAA+HC,QAAAA,MAAM,EAAC;AAAtI,OAAzB;AAAA,8BACI,QAAC,QAAD;AAAW,QAAA,MAAM,EAAE,CAAnB;AAAsB,QAAA,QAAQ,EAAE,KAAhC;AAAuC,QAAA,YAAY,EAAEZ;AAArD;AAAA;AAAA;AAAA;AAAA,cADJ,EAEMF,QAAQ,CAACe,GAAT,CAAaC,IAAI,iBACf,QAAC,IAAD;AAAM,QAAA,MAAM,EAAEA,IAAI,CAACC,MAAnB;AAA2B,QAAA,QAAQ,EAAED,IAAI,CAACE,QAA1C;AAAoD,QAAA,KAAK,EAAGF,IAAI,CAACG,KAAjE;AAAyE,QAAA,IAAI,EAAEH,IAAI,CAACI;AAApF;AAAA;AAAA;AAAA;AAAA,cADe,CACoF;AADrG,OAFN;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAwBH;AACJ;;GA3DQzB,I;;KAAAA,I;AA6DL,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport Post from '../Post/Post';\r\nimport  { useState, useEffect } from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport PostForm from '../Post/PostForm';\r\n\r\nfunction Home() {\r\n    const [error, setError] = useState(null)\r\n    const [isLoaded, setIsLoaded] = useState(false) //data geldi gelmedi mi\r\n    const [postList, setPostList] = useState([]) //data bunun içine dolacak\r\n\r\n    const refreshPosts=() =>{\r\n        fetch(\"/posts\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                setIsLoaded(true); //data geldi\r\n                setPostList(result) //data\r\n            },\r\n            (error) => {\r\n                setIsLoaded(true);\r\n                setError(error);\r\n            }\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n       refreshPosts()\r\n    },[postList])//herhangi bir değişiklik olduğunda algıla ve refresle //yani birşey kaydettiğimde ekrana kaydettiğimi getir\r\n\r\n    \r\n    if (error) //en başta null olarak gönderildiği için buraya girmez parametre error olduğunda girer\r\n    {\r\n        return <div>  Error !!! </div>;\r\n    } else if (!isLoaded) //data henüz gelemdiyse\r\n    {\r\n        return <div>Loading... </div>;\r\n\r\n    }\r\n    else {\r\n        return (\r\n\r\n\r\n\r\n            <Container fixed Box sx={{   rowLength: 100 , display:\"flex\", flexWrap:\"wrap\", justifyContent:\"center\", alignItems:\"center\", backgroundColor:'#f0f5ff', height:'100vh'}}>\r\n                <PostForm  kisiId={1} kisiName={\"ddd\"} refreshPosts={refreshPosts}/>\r\n                 {postList.map(post => (\r\n                    <Post kisiId={post.kisiId} kisiName={post.kisiName} title= {post.title}  text={post.text} ></Post> //gelen her bir datayı post componenti olarak renderlar\r\n                    \r\n                ))}\r\n            {/* <Box sx={{ display:\"flex\",flexWrap:\"wrap\",justifyContent:\"center\",alignItems:\"center\",backgroundColor:'#cfe8fc', height:'100vh'}} /> */}\r\n            {/* {postList.map(post => (\r\n                    <Post title= {post.title}  text={post.text}></Post> //gelen her bir datayı post componenti olarak renderlar\r\n                    \r\n                ))} */}\r\n          </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n          \r\n        );\r\n    }\r\n}\r\n\r\n    export default Home;"]},"metadata":{},"sourceType":"module"}