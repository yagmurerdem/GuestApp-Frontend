{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\digerpcden\\\\digerpcdenYagmurErdem\\\\Benim\\\\questapp\\\\questappreact\\\\quest-app-react-app\\\\src\\\\components\\\\Post\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { red } from '@mui/material/colors';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport InsertCommentIcon from '@mui/icons-material/InsertComment';\nimport { Link } from \"react-router-dom\"; //import { useState } from \"react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpandMore = styled(props => {\n  const {\n    expand,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(IconButton, { ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n})(_ref => {\n  let {\n    theme,\n    expand\n  } = _ref;\n  return {\n    transform: !expand ? 'rotate(0deg)' : '',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  };\n});\n_c = ExpandMore;\nexport default function Post(props) {\n  _s();\n\n  const [expanded, setExpanded] = React.useState(false); //aşağı doğru açılıp kapanan ok için\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false); //data geldi gelmedi mi\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n    refreshComments(); //icona tıklandığında verileri çek diyorum\n\n    console.log(commentList);\n  };\n\n  const {\n    title,\n    text,\n    kisiId,\n    kisiName,\n    id\n  } = props;\n  const [liked, setLiked] = React.useState(false);\n\n  const handleLike = () => {\n    setLiked(!liked);\n  }; //const classes = ExpandMore();\n\n\n  const [commentList, setCommentList] = useState([]);\n  const isInitialMount = useRef(true); //sayfa ilk kez mi load ediliyor yoksa biri tıkladıda commentleri açtı mı onu söylicek//sayfa açıldığı an commentlerin render edilmesini istemiyoruz.\n\n  const refreshComments = () => {\n    fetch(\"/comments?id=\" + id) //bu postun commentlerini getir\n    .then(res => res.json()).then(result => {\n      setIsLoaded(true); //data geldi\n\n      setCommentList(result); //data\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  };\n\n  useEffect(() => {\n    if (isInitialMount.current) isInitialMount.current = false; //ilk defa ayağa kalktığını gördüm artık false a çekebilirim.Bir dahaki gelişte oraya girmesin diye\n    else refreshComments(); //değilse commentleri refresle\n  }, [commentList]); //herhangi bir değişiklik olduğunda algıla ve refresle //yani birşey kaydettiğimde ekrana kaydettiğimi getir\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postContainer\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: 800,\n        textAlign: 'left',\n        margin: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        avatar: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: '/kisiler/' + kisiId\n          },\n          sx: {\n            textDecoration: \"none\",\n            boxShadow: \"none\",\n            color: \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              background: 'linear-gradient(45deg,#2196F3 30%, #21CBF3 90%)'\n            },\n            \"aria-label\": \"recipe\",\n            children: kisiName.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this),\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        disableSpacing: true,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleLike,\n          \"aria-label\": \"add to favorites\",\n          children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n            style: liked ? {\n              color: 'red'\n            } : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExpandMore, {\n          expand: expanded,\n          onClick: handleExpandClick,\n          \"aria-expanded\": expanded,\n          \"aria-label\": \"show more\",\n          children: /*#__PURE__*/_jsxDEV(InsertCommentIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: expanded,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"HyPHTWjcr5P5tmj4tVvAk2CToTE=\");\n\n_c2 = Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ExpandMore\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/digerpcden/digerpcdenYagmurErdem/Benim/questapp/questappreact/quest-app-react-app/src/components/Post/Post.js"],"names":["React","useState","useRef","useEffect","styled","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","FavoriteIcon","ExpandMoreIcon","InsertCommentIcon","Link","ExpandMore","props","expand","other","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Post","expanded","setExpanded","error","setError","isLoaded","setIsLoaded","handleExpandClick","refreshComments","console","log","commentList","title","text","kisiId","kisiName","id","liked","setLiked","handleLike","setCommentList","isInitialMount","fetch","then","res","json","result","current","width","textAlign","margin","pathname","textDecoration","boxShadow","color","background","charAt","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useState, useRef,useEffect } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport InsertCommentIcon from '@mui/icons-material/InsertComment';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//import { useState } from \"react\";\r\n\r\n\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : '',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\n\r\nexport default function Post(props) {\r\n  const [expanded, setExpanded] = React.useState(false); //aşağı doğru açılıp kapanan ok için\r\n  const [error, setError] = useState(null)\r\n  const [isLoaded, setIsLoaded] = useState(false) //data geldi gelmedi mi\r\n  \r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n    refreshComments(); //icona tıklandığında verileri çek diyorum\r\n    console.log(commentList);\r\n  };\r\n  const { title, text, kisiId, kisiName, id } = props;\r\n  const [liked, setLiked] = React.useState(false);\r\n\r\n  const handleLike = () => {\r\n    setLiked(!liked);\r\n  }\r\n\r\n  //const classes = ExpandMore();\r\n\r\n  const [commentList, setCommentList] = useState([]);\r\n\r\n  const isInitialMount = useRef(true); //sayfa ilk kez mi load ediliyor yoksa biri tıkladıda commentleri açtı mı onu söylicek//sayfa açıldığı an commentlerin render edilmesini istemiyoruz.\r\n\r\n  const refreshComments = () => {\r\n    fetch(\"/comments?id=\" + id) //bu postun commentlerini getir\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true); //data geldi\r\n          setCommentList(result) //data\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isInitialMount.current)\r\n      isInitialMount.current = false; //ilk defa ayağa kalktığını gördüm artık false a çekebilirim.Bir dahaki gelişte oraya girmesin diye\r\n    else\r\n    refreshComments(); //değilse commentleri refresle\r\n  }, [commentList])//herhangi bir değişiklik olduğunda algıla ve refresle //yani birşey kaydettiğimde ekrana kaydettiğimi getir\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"postContainer\">\r\n      <Card sx={{ width: 800, textAlign: 'left', margin: 2 }}>\r\n        <CardHeader\r\n          avatar={\r\n            <Link to={{ pathname: '/kisiler/' + kisiId }} sx={{ textDecoration: \"none\", boxShadow: \"none\", color: \"white\" }}>\r\n              <Avatar sx={{ background: 'linear-gradient(45deg,#2196F3 30%, #21CBF3 90%)' }} aria-label=\"recipe\">\r\n                {kisiName.charAt(0).toUpperCase()}\r\n              </Avatar>\r\n            </Link>\r\n          }\r\n\r\n          title={title}\r\n\r\n        />\r\n\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {text}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <IconButton\r\n\r\n            onClick={handleLike}\r\n            aria-label=\"add to favorites\">\r\n            <FavoriteIcon style={liked ? { color: 'red' } : null} />\r\n          </IconButton>\r\n\r\n          <ExpandMore\r\n            expand={expanded}\r\n            onClick={handleExpandClick}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <InsertCommentIcon />\r\n          </ExpandMore>\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}