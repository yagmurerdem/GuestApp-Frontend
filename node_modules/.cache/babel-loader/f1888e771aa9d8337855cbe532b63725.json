{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\digerpcden\\\\digerpcdenYagmurErdem\\\\Benim\\\\questapp\\\\questappreact\\\\quest-app-react-app\\\\src\\\\components\\\\Home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Post from '../Post/Post';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false); //data geldi gelmedi mi\n\n  const [postList, setPostList] = useState([]); //data bunun içine dolacak\n\n  useEffect(() => {\n    fetch(\"/posts\").then(res => res.json()).then(result => {\n      setIsLoaded(true); //data geldi\n\n      setPostList(result); //data\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) //en başta null olarak gönderildiği için buraya girmez parametre error olduğunda girer\n    {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"  Error !!! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) //data henüz gelemdiyse\n    {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }, this);\n    } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: postList.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        title: post.title,\n        text: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this) //gelen her bir datayı post componenti olarak renderlar\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Home, \"H4YLgqKE4ziVJ/DiQo+X9quRNzE=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/digerpcden/digerpcdenYagmurErdem/Benim/questapp/questappreact/quest-app-react-app/src/components/Home/Home.js"],"names":["React","Post","useState","useEffect","Home","error","setError","isLoaded","setIsLoaded","postList","setPostList","fetch","then","res","json","result","map","post","title","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAAUC,QAAV,EAAoBC,SAApB,QAAqC,OAArC;;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC,CAFY,CAEoC;;AAChD,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC,CAHY,CAGiC;;AAG7CC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAAC,QAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRP,MAAAA,WAAW,CAAC,IAAD,CAAX,CADQ,CACW;;AACnBE,MAAAA,WAAW,CAACK,MAAD,CAAX,CAFQ,CAEY;AACvB,KANT,EAOSV,KAAD,IAAW;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAVT;AAaH,GAdQ,EAcN,EAdM,CAAT;;AAeA,MAAIA,KAAJ,EAAW;AACX;AACI,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHD,MAGO,IAAI,CAACE,QAAL,EAAe;AACtB;AACI,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH,KAJM,MAKF;AACD,wBAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAGKE,QAAQ,CAACO,GAAT,CAAaC,IAAI,iBACd,QAAC,IAAD;AAAM,QAAA,KAAK,EAAGA,IAAI,CAACC,KAAnB;AAA2B,QAAA,IAAI,EAAED,IAAI,CAACE;AAAtC;AAAA;AAAA;AAAA;AAAA,cADc,CACsC;AADvD;AAHL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAWH;AACJ;;GA1CQf,I;;KAAAA,I;AA4CL,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport Post from '../Post/Post';\r\nimport  { useState, useEffect } from \"react\";\r\n\r\n\r\nfunction Home() {\r\n    const [error, setError] = useState(null)\r\n    const [isLoaded, setIsLoaded] = useState(false) //data geldi gelmedi mi\r\n    const [postList, setPostList] = useState([]) //data bunun içine dolacak\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"/posts\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true); //data geldi\r\n                    setPostList(result) //data\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n\r\n    }, [])\r\n    if (error) //en başta null olarak gönderildiği için buraya girmez parametre error olduğunda girer\r\n    {\r\n        return <div>  Error !!! </div>;\r\n    } else if (!isLoaded) //data henüz gelemdiyse\r\n    {\r\n        return <div>Loading... </div>;\r\n\r\n    }\r\n    else {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n         \r\n\r\n                {postList.map(post => (\r\n                    <Post title= {post.title}  text={post.text}></Post> //gelen her bir datayı post componenti olarak renderlar\r\n                    \r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n    export default Home;"]},"metadata":{},"sourceType":"module"}